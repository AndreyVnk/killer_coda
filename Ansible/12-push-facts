1. Playbook execution to push facts to all servers:

# custom_fact_push.yaml 
---
- name: Patching Facts Push
  hosts: servers
  vars:
  gather_facts: True
  become: True
  tasks:

  - name: Debug env variables just to see them
    debug:
      var: env

  - name: Create the facts directory in case it isn't there
    file:
      path: /etc/ansible/facts.d
      state: directory

  - name: Push over the prod_patching.fact file if prod
    copy:
      src: /root/prod_patching.fact
      dest: "/etc/ansible/facts.d/patching.fact"
    when: '"prod" in env'

  - name: Push over the dev_patching.fact file if dev
    copy:
      src: /root/dev_patching.fact
      dest: "/etc/ansible/facts.d/patching.fact"
    when: '"dev" in env'

# group_by.yaml
---
- name: System Facts and Group by those facts
  hosts: servers
  vars:
  gather_facts: True
  become: True
  tasks:

    - name: "Show Groups active in this playbook at start"
      debug:
        msg: "{{ group_names }}"

    - name: Setting groups for rebootgroup
      group_by:
        key: "{{ ansible_local.patching.patch_group }}"
      failed_when: false

    - name: Checking Rebooting flag
      group_by:
        key: Rebooting
      when: '"true" in ansible_local.patching.Rebooting'

    - name: "Show Groups active in this playbook at end"
      debug:
        msg: "{{ group_names }}"

# prod_patching.fact
{
  "patch_group": "group2",
  "Rebooting":   "true",
  "appserver":   "true",
  "database":    "false",
  "webserver":   "false"
}

# dev_patching.fact
{
  "patch_group": "group1",
  "Rebooting":   "false",
  "appserver":   "true",
  "database":    "false",
  "webserver":   "false"
}


# commands
$ ansible-playbook -i /root/hosts /root/custom_fact_push.yaml
$ ansible-playbook -i /root/hosts /root/group_by.yaml


